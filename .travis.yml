language:
  - php
  - npm
services: docker
php:
- 7.0
env:
  DOCKER_COMPOSE_VERSION: 1.6.2
  APP_ENV: local
  APP_DEBUG: true
  CACHE_DRIVER: array
  QUEUE_DRIVER: sync
before_install:
  # Upgrade docker/docker-compose versions so we can use v2 of the Dockerfile format
  - docker -v
  - sudo apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install docker-engine=1.10.3-0~trusty
  - docker -v
  - sudo rm /usr/local/bin/docker-compose
  - curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m`" > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - cp .env.example .env
  # Stop the postgres instance travis sets up automatically
  - sudo /etc/init.d/postgresql stop
  # Start the docker stuff
  - docker-compose -v
  - docker-compose up -d
  - sleep 4
  - docker-compose ps
install:
  # Install dev php dependencies
  - docker run -i -v $(pwd):/var/www/html $(docker images -f label=application=lumen -q ) composer install --no-interaction --prefer-dist
script:
  # Ensure phpcs triggers a failing build
  - docker exec -it $(docker-compose ps -q fpm) vendor/bin/phpcs --config-set ignore_warnings_on_exit 1
  # Ensure breaking PSR2 compliance fails in CI
  - docker exec -it $(docker-compose ps -q fpm) vendor/bin/phpcs --standard=PSR2 --ignore=app/Http/routes.php app
  # Run tests
  - docker exec -it $(docker-compose ps -q fpm) vendor/bin/phpunit
